#!/bin/bash
# Copyright 2013 Johan Rydberg.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This scripts expect the following variables to be set in the `.env`
# file:
#
# - IMAGE_DIR -- where images should be written
# - PACKS_DIR -- where build packs are located
#

APP=$1
COMMIT=$2
TEXT=$3

TMPDIR=${TMPDIR:-/tmp}
FQDN=`hostname --fqdn`
SERVER_NAME=${SERVER_NAME:-$FQDN}
SERVER_PORT=${SERVER_PORT:-$PORT}
IMAGE=${APP}-${COMMIT}
CACHE_DIR=$TMPDIR/build-cache-$APP

BUILD_DIR=`mktemp -d`

set -e
trap "rm -rf $BUILD_DIR" EXIT

mkdir -p $BUILD_DIR $CACHE_DIR


function echo_title() {
  echo $'\e[1G----->' $*
}

function process() {
  while read line; do
    if [[ "$line" == --* ]]; then
      echo $'\e[1G'$line
    else
      echo $'\e[1G      ' "$line"
    fi
  done 
}

echo_title "Receiving app bundle..."
tar -C $BUILD_DIR -xf -

for BUILDPACK in "$PACKS_DIR/*"; do
  BUILDPACK_NAME=$($BUILDPACK/bin/detect "$BUILD_DIR") \
     && SELECTED_BUILDPACK=$BUILDPACK && break
done

if [ -n "$SELECTED_BUILDPACK" ]; then
  echo_title "$BUILDPACK_NAME app detected"
else
  echo_title "Unable to select a buildpack"
  exit 1
fi

# First check that we have a Procfile.
if ! [ -e "$BUILD_DIR/Procfile" ]; then
  echo_title "No Procfile available."
  exit 1
fi

$SELECTED_BUILDPACK/bin/compile "$BUILD_DIR" "$CACHE_DIR" | process

if [ -f "$BUILD_DIR/.slugignore" ]; then
  tar --exclude='.git' -X "$BUILD_DIR/.slugignore" -C $BUILD_DIR -czf $IMAGE_DIR/$IMAGE .
else
  tar --exclude='.git' -C $BUILD_DIR -czf $IMAGE_DIR/$IMAGE .
fi

SLUG_SIZE=$(du -Sh $IMAGE_DIR/$IMAGE | cut -f1)
echo_title "App image size -> $SLUG_SIZE"

IMAGE_URL=http://${SERVER_NAME}:${SERVER_PORT}/image/$IMAGE
#echo gilliam --app $APP release --build $COMMIT --message "$TEXT" --procfile $BUILD_DIR/Procfile $IMAGE_URL
echo -n $'\e[1G-----> Deploying release ... '
gilliam --app $APP release --build $COMMIT --message "$TEXT" --procfile $BUILD_DIR/Procfile $IMAGE_URL
